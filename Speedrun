local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local speedBoost, normalSpeed = 100, 16
local jumpBoost, normalJump = 180, 50
local isSpeedOn, isJumpOn = false, false

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedJumpGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local function createStyledButton(name, anchorPos, color, text)
	local button = Instance.new("TextButton")
	button.Name = name
	button.Size = UDim2.new(0, 90, 0, 35)
	button.Position = anchorPos
	button.AnchorPoint = Vector2.new(0, 1)
	button.BackgroundColor3 = color
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.Gotham
	button.TextScaled = true
	button.Text = text
	button.AutoButtonColor = false
	button.Parent = screenGui

	Instance.new("UICorner", button).CornerRadius = UDim.new(0, 8)
	local stroke = Instance.new("UIStroke", button)
	stroke.Thickness = 1.5
	stroke.Color = Color3.fromRGB(255, 0, 0)
	stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	return button
end

local function createMiniButton(name, anchorPos, text)
	local button = Instance.new("TextButton")
	button.Name = name
	button.Size = UDim2.new(0, 30, 0, 30)
	button.Position = anchorPos
	button.AnchorPoint = Vector2.new(0, 1)
	button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.Gotham
	button.TextScaled = true
	button.Text = text
	button.AutoButtonColor = false
	button.Parent = screenGui
	Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)
	return button
end

local function createLabel(name, anchorPos, text)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.Size = UDim2.new(0, 45, 0, 35)
	label.Position = anchorPos
	label.AnchorPoint = Vector2.new(0, 1)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextScaled = true
	label.Text = text
	label.Parent = screenGui
	return label
end

local function animateButton(button)
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local scaleUp = TweenService:Create(button, tweenInfo, { Size = button.Size + UDim2.new(0, 5, 0, 5) })
	local scaleDown = TweenService:Create(button, tweenInfo, { Size = button.Size })
	scaleUp:Play()
	scaleUp.Completed:Wait()
	scaleDown:Play()
end

local function updateSpeed()
	local char = player.Character
	if char and char:FindFirstChild("Humanoid") then
		char.Humanoid.WalkSpeed = isSpeedOn and speedBoost or normalSpeed
	end
end

local function updateJump()
	local char = player.Character
	if char and char:FindFirstChild("Humanoid") then
		local h = char.Humanoid
		h.UseJumpPower = true
		h.JumpPower = isJumpOn and jumpBoost or normalJump
		pcall(function() h.JumpHeight = h.JumpPower / 3.2 end)
	end
end

-- SPEED UI
local speedButton = createStyledButton("SpeedButton", UDim2.new(0, 20, 1, -20), Color3.fromRGB(170, 0, 0), "Speed OFF")
local speedLabel = createLabel("SpeedLabel", UDim2.new(0, 115, 1, -20), tostring(speedBoost))
local speedPlus = createMiniButton("SpeedPlus", UDim2.new(0, 165, 1, -20), "+")
local speedMinus = createMiniButton("SpeedMinus", UDim2.new(0, 200, 1, -20), "-")

local function updateSpeedButton()
	speedButton.BackgroundColor3 = isSpeedOn and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
	speedButton.Text = isSpeedOn and "Speed ON" or "Speed OFF"
	speedLabel.Text = tostring(speedBoost)
end

speedButton.MouseButton1Click:Connect(function()
	isSpeedOn = not isSpeedOn
	updateSpeed()
	updateSpeedButton()
	animateButton(speedButton)
end)

speedPlus.MouseButton1Click:Connect(function()
	speedBoost = math.min(speedBoost + 5, 300)
	if isSpeedOn then updateSpeed() end
	updateSpeedButton()
end)

speedMinus.MouseButton1Click:Connect(function()
	speedBoost = math.max(speedBoost - 5, 16)
	if isSpeedOn then updateSpeed() end
	updateSpeedButton()
end)

-- JUMP UI
local jumpButton = createStyledButton("JumpButton", UDim2.new(0, 20, 1, -65), Color3.fromRGB(170, 0, 0), "Jump OFF")
local jumpLabel = createLabel("JumpLabel", UDim2.new(0, 115, 1, -65), tostring(jumpBoost))
local jumpPlus = createMiniButton("JumpPlus", UDim2.new(0, 165, 1, -65), "+")
local jumpMinus = createMiniButton("JumpMinus", UDim2.new(0, 200, 1, -65), "-")

local function updateJumpButton()
	jumpButton.BackgroundColor3 = isJumpOn and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
	jumpButton.Text = isJumpOn and "Jump ON" or "Jump OFF"
	jumpLabel.Text = tostring(jumpBoost)
end

jumpButton.MouseButton1Click:Connect(function()
	isJumpOn = not isJumpOn
	updateJump()
	updateJumpButton()
	animateButton(jumpButton)
end)

jumpPlus.MouseButton1Click:Connect(function()
	jumpBoost = math.min(jumpBoost + 10, 500)
	if isJumpOn then updateJump() end
	updateJumpButton()
end)

jumpMinus.MouseButton1Click:Connect(function()
	jumpBoost = math.max(jumpBoost - 10, 50)
	if isJumpOn then updateJump() end
	updateJumpButton()
end)

-- Anti Fall Damage
local function applyAntiFallDamage(char)
	local hum = char:WaitForChild("Humanoid")
	local hrp = char:WaitForChild("HumanoidRootPart")

	hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
	hum:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
	hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
	hum:SetStateEnabled(Enum.HumanoidStateType.Dead, false)

	for _, v in pairs(char:GetDescendants()) do
		if v:IsA("Script") or v:IsA("LocalScript") then
			if string.lower(v.Name):find("falldamage") then
				v:Destroy()
			end
		end
	end

	RunService.Heartbeat:Connect(function()
		if hum:GetState() == Enum.HumanoidStateType.Freefall then
			if hrp.Velocity.Y < -80 then
				hrp.Velocity = Vector3.new(hrp.Velocity.X, -40, hrp.Velocity.Z)
			end
		end
	end)
end

player.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid")
	updateSpeed()
	updateJump()
	updateSpeedButton()
	updateJumpButton()
	applyAntiFallDamage(char)
end)

if player.Character and player.Character:FindFirstChild("Humanoid") then
	updateSpeed()
	updateJump()
	updateSpeedButton()
	updateJumpButton()
	applyAntiFallDamage(player.Character)
end

task.spawn(function()
	while true do
		task.wait(2)
		updateJump()
	end
end)
