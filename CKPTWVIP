-- CKPTW VIP Teleport Script v4 - Fixed Version
-- Compatible with Delta Executor Android

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

-- Function to get character safely
local function getCharacter()
    return player.Character
end

local function getHumanoidRootPart()
    local char = getCharacter()
    if char then
        return char:FindFirstChild("HumanoidRootPart")
    end
    return nil
end

-- Variables
local isAutoTeleporting = false
local autoTeleportConnection = nil
local currentPositionIndex = 1
local autoTeleportDelay = 25 -- 25-45 seconds delay (safe mode)
local autoToggleButton = nil
local scrollFrame = nil
local lastNotificationTime = 0
local notificationCooldown = 3

-- Koordinat teleport positions (from new script with updated coordinates)
local positions = {
    {pos = Vector3.new(387, 308, -184), name = "Checkpoint 1"},
    {pos = Vector3.new(103, 411, 616), name = "Checkpoint 2"},
    {pos = Vector3.new(9, 600, 997), name = "Checkpoint 3"},
    {pos = Vector3.new(873, 863, 583), name = "Checkpoint 4"},
    {pos = Vector3.new(1614, 1079, 159), name = "Checkpoint 5"},
    {pos = Vector3.new(2967, 1526, 705), name = "Checkpoint 6"},
    {pos = Vector3.new(1807, 1980, 2166), name = "Final Checkpoint", isPuncak = true}
}

-- Anti-spam notification function
local function sendNotification(title, text, duration)
    local currentTime = tick()
    if currentTime - lastNotificationTime >= notificationCooldown then
        lastNotificationTime = currentTime
        pcall(function()
            game.StarterGui:SetCore("SendNotification", {
                Title = title,
                Text = text,
                Duration = duration or 2
            })
        end)
    end
end

-- Advanced safe teleport with anti-bounce system (from new script)
local function basicTeleport(targetPosition)
    local humanoidRootPart = getHumanoidRootPart()
    if not humanoidRootPart then
        return false
    end
    
    print("Before teleport - Current position: " .. tostring(humanoidRootPart.Position))
    print("Teleporting to: " .. tostring(targetPosition))
    
    -- Method 1: Direct CFrame
    humanoidRootPart.CFrame = CFrame.new(targetPosition)
    wait(0.1)
    
    -- Method 2: Backup dengan Position (jika CFrame gagal)
    if (humanoidRootPart.Position - targetPosition).Magnitude > 10 then
        humanoidRootPart.Position = targetPosition
        wait(0.1)
    end
    
    -- Method 3: Force teleport jika masih gagal
    if (humanoidRootPart.Position - targetPosition).Magnitude > 10 then
        humanoidRootPart.CFrame = CFrame.new(targetPosition)
        wait(0.1)
    end
    
    print("After teleport - New position: " .. tostring(humanoidRootPart.Position))
    
    -- Reset velocity untuk mencegah bounce
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    
    -- Anti-bounce stabilization
    spawn(function()
        wait(0.5) -- Tunggu teleport stabil
        if humanoidRootPart and isAutoTeleporting then
            for i = 1, math.random(1, 2) do
                if not isAutoTeleporting then break end
                local currentCFrame = humanoidRootPart.CFrame
                local randomY = math.random(-60, 60)
                humanoidRootPart.CFrame = currentCFrame * CFrame.Angles(0, math.rad(randomY), 0)
                wait(0.3)
                -- Reset velocity after rotation
                humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end)
    
    -- Check apakah teleport berhasil
    local distance = (humanoidRootPart.Position - targetPosition).Magnitude
    if distance < 20 then
        print("Teleport SUCCESS! Distance: " .. distance)
        return true
    else
        print("Teleport FAILED! Distance: " .. distance)
        return false
    end
end

-- Respawn function
local function respawnPlayer()
    local character = getCharacter()
    if character and character:FindFirstChild("Humanoid") then
        character.Humanoid.Health = 0
        
        -- Wait for respawn (lebih lama)
        local respawnTime = math.random(5, 8)
        for i = respawnTime, 1, -1 do
            if not isAutoTeleporting then return false end
            wait(1)
        end
        
        return true
    end
    return false
end

-- Fungsi teleport dengan improved system
local function teleportToPosition(positionData, isManual)
    local humanoidRootPart = getHumanoidRootPart()
    if humanoidRootPart then
        -- Use advanced teleport
        local success = basicTeleport(positionData.pos)
        
        if success then
            -- Safe notification (anti-spam)
            sendNotification("CKPTW VIP", "Teleported to " .. positionData.name, 1.5)
            
            -- Auto respawn jika sampai puncak dan menggunakan auto mode
            if positionData.isPuncak and not isManual then
                -- Extra delay at final checkpoint
                wait(math.random(5, 10))
                sendNotification("CKPTW VIP", "Final checkpoint reached! Respawning in 5-8 seconds...", 8)
                respawnPlayer()
                
                -- Extra cooldown setelah respawn (15-25 seconds)
                local cooldown = math.random(15, 25)
                for i = cooldown, 1, -1 do
                    if not isAutoTeleporting then break end
                    wait(1)
                end
            end
        end
    end
end

-- Auto teleport function with new timing system
local function startAutoTeleport()
    if autoTeleportConnection then
        autoTeleportConnection:Disconnect()
        autoTeleportConnection = nil
    end
    
    local lastTeleportTime = 0
    autoTeleportConnection = RunService.Heartbeat:Connect(function()
        if isAutoTeleporting then
            -- Dynamic delay based on position (25-45 seconds)
            local dynamicDelay = math.random(25, 45)
            
            if tick() - lastTeleportTime >= dynamicDelay then
                local currentPos = positions[currentPositionIndex]
                teleportToPosition(currentPos, false)
                
                -- Check if reached final checkpoint
                if currentPos.isPuncak then
                    isAutoTeleporting = false
                    if autoToggleButton then
                        autoToggleButton.Text = "▶ Start Auto (Safe Mode)"
                        autoToggleButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
                    end
                    -- Re-enable individual buttons
                    for _, button in pairs(scrollFrame:GetChildren()) do
                        if button:IsA("TextButton") then
                            local posData = positions[button.LayoutOrder]
                            if posData and posData.isPuncak then
                                button.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
                            else
                                button.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
                            end
                        end
                    end
                    stopAutoTeleport()
                    return
                end
                
                currentPositionIndex = currentPositionIndex + 1
                if currentPositionIndex > #positions then
                    currentPositionIndex = 1
                end
                
                lastTeleportTime = tick()
            end
        end
    end)
end

local function stopAutoTeleport()
    if autoTeleportConnection then
        autoTeleportConnection:Disconnect()
        autoTeleportConnection = nil
    end
end

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CKPTWVipGui"
screenGui.Parent = CoreGui
screenGui.ResetOnSpawn = false

-- Main Frame (keeping original design)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.05, 0, 0.2, 0)
mainFrame.Size = UDim2.new(0, 230, 0, 350)
mainFrame.Active = true
mainFrame.Draggable = true

-- Corner rounding
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

-- Drop shadow effect
local shadow = Instance.new("Frame")
shadow.Name = "Shadow"
shadow.Parent = screenGui
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.8
shadow.BorderSizePixel = 0
shadow.Position = UDim2.new(0.05, 2, 0.2, 2)
shadow.Size = UDim2.new(0, 230, 0, 350)
shadow.ZIndex = mainFrame.ZIndex - 1

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 8)
shadowCorner.Parent = shadow

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Parent = mainFrame
titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
titleBar.BorderSizePixel = 0
titleBar.Size = UDim2.new(1, 0, 0, 32)

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

-- Fix title bar bottom corners
local titleBarFix = Instance.new("Frame")
titleBarFix.Parent = titleBar
titleBarFix.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
titleBarFix.BorderSizePixel = 0
titleBarFix.Position = UDim2.new(0, 0, 0.5, 0)
titleBarFix.Size = UDim2.new(1, 0, 0.5, 0)

-- Title Label (updated name)
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Parent = titleBar
titleLabel.BackgroundTransparency = 1
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.Size = UDim2.new(1, -70, 1, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Text = "CKPTW VIP"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 12
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Parent = titleBar
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
minimizeButton.BorderSizePixel = 0
minimizeButton.Position = UDim2.new(1, -60, 0, 4)
minimizeButton.Size = UDim2.new(0, 24, 0, 24)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Text = "−"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 14

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 4)
minimizeCorner.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Parent = titleBar
closeButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -32, 0, 4)
closeButton.Size = UDim2.new(0, 24, 0, 24)
closeButton.Font = Enum.Font.GothamBold
closeButton.Text = "×"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 14

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = closeButton

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Parent = mainFrame
contentFrame.BackgroundTransparency = 1
contentFrame.Position = UDim2.new(0, 0, 0, 32)
contentFrame.Size = UDim2.new(1, 0, 1, -32)

-- Auto Teleport Control Frame (updated text)
local autoFrame = Instance.new("Frame")
autoFrame.Name = "AutoFrame"
autoFrame.Parent = contentFrame
autoFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
autoFrame.BorderSizePixel = 0
autoFrame.Position = UDim2.new(0, 8, 0, 8)
autoFrame.Size = UDim2.new(1, -16, 0, 45)

local autoCorner = Instance.new("UICorner")
autoCorner.CornerRadius = UDim.new(0, 6)
autoCorner.Parent = autoFrame

-- Select All Label (updated for new system)
local selectAllLabel = Instance.new("TextLabel")
selectAllLabel.Name = "SelectAllLabel"
selectAllLabel.Parent = autoFrame
selectAllLabel.BackgroundTransparency = 1
selectAllLabel.Position = UDim2.new(0, 8, 0, 2)
selectAllLabel.Size = UDim2.new(1, -16, 0, 18)
selectAllLabel.Font = Enum.Font.GothamBold
selectAllLabel.Text = "Auto Teleport Control (7 Checkpoints - Safe Mode)"
selectAllLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
selectAllLabel.TextSize = 10
selectAllLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Start/Stop Button (updated text)
autoToggleButton = Instance.new("TextButton")
autoToggleButton.Name = "AutoToggleButton"
autoToggleButton.Parent = autoFrame
autoToggleButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
autoToggleButton.BorderSizePixel = 0
autoToggleButton.Position = UDim2.new(0, 8, 0, 22)
autoToggleButton.Size = UDim2.new(1, -16, 0, 18)
autoToggleButton.Font = Enum.Font.Gotham
autoToggleButton.Text = "▶ Start Auto (Safe Mode - 25-45s delays)"
autoToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
autoToggleButton.TextSize = 9

local autoButtonCorner = Instance.new("UICorner")
autoButtonCorner.CornerRadius = UDim.new(0, 4)
autoButtonCorner.Parent = autoToggleButton

-- Scroll Frame for positions
scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Name = "ScrollFrame"
scrollFrame.Parent = contentFrame
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.Position = UDim2.new(0, 8, 0, 58)
scrollFrame.Size = UDim2.new(1, -16, 1, -66)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 3
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(80, 80, 100)

-- UI List Layout
local listLayout = Instance.new("UIListLayout")
listLayout.Parent = scrollFrame
listLayout.Padding = UDim.new(0, 4)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Create position buttons (using new coordinates)
local buttonHeight = 25
local totalHeight = 0

for i, positionData in ipairs(positions) do
    local button = Instance.new("TextButton")
    button.Name = positionData.name
    button.Parent = scrollFrame
    
    -- Special color for Final Checkpoint
    if positionData.isPuncak then
        button.BackgroundColor3 = Color3.fromRGB(255, 140, 0) -- Orange for final checkpoint
    else
        button.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
    end
    
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, -6, 0, buttonHeight)
    button.Font = Enum.Font.Gotham
    button.Text = positionData.name .. " - Safe Teleport"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 10
    button.LayoutOrder = i
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = button
    
    -- Hover effects
    button.MouseEnter:Connect(function()
        if not isAutoTeleporting then
            if positionData.isPuncak then
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 165, 0)}):Play()
            else
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(90, 150, 200)}):Play()
            end
        end
    end)
    
    button.MouseLeave:Connect(function()
        if not isAutoTeleporting then
            if positionData.isPuncak then
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 140, 0)}):Play()
            else
                TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 130, 180)}):Play()
            end
        end
    end)
    
    -- Click to teleport (manual mode - no respawn)
    button.MouseButton1Click:Connect(function()
        if not isAutoTeleporting then
            teleportToPosition(positionData, true) -- true = manual mode
            currentPositionIndex = i
            
            -- Button click animation
            local originalColor = positionData.isPuncak and Color3.fromRGB(255, 140, 0) or Color3.fromRGB(70, 130, 180)
            local clickColor = positionData.isPuncak and Color3.fromRGB(200, 100, 0) or Color3.fromRGB(50, 110, 160)
            
            TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = clickColor}):Play()
            wait(0.1)
            TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = originalColor}):Play()
        end
    end)
    
    totalHeight = totalHeight + buttonHeight + 4
end

-- Update canvas size
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)

-- Auto toggle button functionality
autoToggleButton.MouseButton1Click:Connect(function()
    isAutoTeleporting = not isAutoTeleporting
    
    if isAutoTeleporting then
        autoToggleButton.Text = "⏸ Stop Auto (Safe Mode)"
        autoToggleButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
        startAutoTeleport()
        
        -- Disable individual buttons during auto mode
        for _, button in pairs(scrollFrame:GetChildren()) do
            if button:IsA("TextButton") then
                button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            end
        end
    else
        autoToggleButton.Text = "▶ Start Auto (Safe Mode - 25-45s delays)"
        autoToggleButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        stopAutoTeleport()
        
        -- Re-enable individual buttons
        for _, button in pairs(scrollFrame:GetChildren()) do
            if button:IsA("TextButton") then
                local positionData = positions[button.LayoutOrder]
                if positionData and positionData.isPuncak then
                    button.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
                else
                    button.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
                end
            end
        end
    end
end)

-- Minimize functionality
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    
    if isMinimized then
        -- Minimize
        contentFrame.Visible = false
        mainFrame.Size = UDim2.new(0, 230, 0, 32)
        shadow.Size = UDim2.new(0, 230, 0, 32)
        minimizeButton.Text = "□"
    else
        -- Restore
        contentFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 230, 0, 350)
        shadow.Size = UDim2.new(0, 230, 0, 350)
        minimizeButton.Text = "−"
    end
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
    stopAutoTeleport()
    screenGui:Destroy()
end)

-- Character respawn handling
player.CharacterAdded:Connect(function(newCharacter)
    -- Reset position index after respawn
    currentPositionIndex = 1
    wait(2)
    sendNotification("CKPTW VIP", "Respawned! Auto teleport reset to Checkpoint 1", 3)
end)

-- Initial animation
mainFrame.Size = UDim2.new(0, 0, 0, 0)
shadow.Size = UDim2.new(0, 0, 0, 0)

local openTween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 230, 0, 350)})
local shadowTween = TweenService:Create(shadow, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 230, 0, 350)})

openTween:Play()
shadowTween:Play()

-- Success notification
wait(0.5)
sendNotification("CKPTW VIP", "7 checkpoints loaded! Safe mode with anti-bounce system enabled!", 4)

-- Cleanup on destroy
screenGui.AncestryChanged:Connect(function()
    if not screenGui.Parent then
        stopAutoTeleport()
    end
end)

print("CKPTW VIP Safe Teleport Script Loaded!")
print("Total checkpoints: " .. #positions)
print("Safe mode: 25-45 second delays, anti-bounce system active")
